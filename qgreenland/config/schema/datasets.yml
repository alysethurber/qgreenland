list(include('dataset'))
---

dataset:
  id: str()
  # TODO: Enum access_method?
  access_method: str()
  sources: list(include('source'))
  metadata: include('metadata')

---
source:
  # Unique ID used for generating paths and uniquely identifiying a source
  # within a dataset.
  id: str()

  # TODO: Make the access-method-dependent params mutually-exclusive. Does
  #       Yamale support this?

  ##### access_method: cmr #####
  # A granule corresponds to n >= 1 files
  granule_ur: str(required=False)
  collection_concept_id: str(required=False)

  ##### access_method: http #####
  # If a granule_ur and collection_concept_id isn't provided, provide a
  # list of files instead
  urls: list(str(), required=False)

  ##### access_method: ogr_remote_vector #####
  # TODO: Consider breaking up in to "featureserver_url", "feature_id", "query"?
  query_url: str(required=False)

  ##### access_method: manual #####
  access_instructions: str(required=False)

  # TODO: Override default filename? By default, the filename from the URL is used
  # base_filename: str(required=False)


---
metadata:
  title: str()
  abstract: str()
  citation:
    text: str()
    url: str()
